* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --container-padding: 10px;
}

/* Keyframes for the up-and-down animation */
@keyframes moveUpDown {
    0% {
        transform: translateY(0); /* Starting position */
    }
    50% {
        transform: translateY(-10px); /* Move up */
    }
    100% {
        transform: translateY(0); /* Back to starting position */
    }
}

.gui-container {
    padding: var(--container-padding);
    background-color: rgb(0,0,0);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(5px);
    color: black;
    opacity: 0.6;

    

    width: 75vw;
    height: 75vh;  

    border-radius: 10px;
    
}

.gui-container > div ,
.gui-container > div > div {
    border: white solid 2px;
}

/*_____Layer 1_________*/
.poke-layer {
   display: grid;
   grid-template-columns: 1fr;
   grid-template-rows: 1fr 1fr;
   height: 100%;
   position: relative;
   z-index: 1;
}
/*
https://www.w3schools.com/css/css_positioning.asp
*/
.top-row,
.bot-row {
    position: relative;
    height: 100%; 
}

.top-row {
    grid-row: 1;
}

bot-row {
    grid-row: 2;
    
}

.op-image-box,
.pl-image-box {
    position: absolute;
    width: fit-content;
    height: fit-content;
    animation: moveUpDown 1s ease-in-out infinite; /* Animation properties */

}

.op-image-box {
    top: 30%;
    right: 10%;
}


.pl-image-box {
    bottom: 45%;
    left: 10%;
}

/*
The idea is that the gui consist of multiple layers
0 is background image
1 is the ground ( that circle over with the pokemons hover
2 is the pokemon sprite
4 is the menu-interaction-message section
*/

/*_____Layer2 _________*/

/* manually set container padding because due to position: absolute
its parents containers padding is not respected */
.info-layer {
    background-color: aliceblue;
    flex: 1;
    border: red solid 5px;
    position: absolute;
    z-index: 2;
    height: 25%;
    bottom: var(--container-padding);
    left: var(--container-padding);
    right: var(--container-padding);

    display: grid;
    grid-template-columns: 1fr 1fr;        
}

.round-msg {
    grid-column: 1;

}

.choice-buttons {
    grid-column: 2;
    display: grid;
    grid-template: 1fr 1fr/ 1fr 1fr;
    border: black solid 5px;
}
